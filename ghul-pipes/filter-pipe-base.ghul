namespace Pipes is
    use Collections.Iterator;

    class FilterPipeBase[T]: Pipe`1[T] is
        _iterator: Iterator[T];

        current: T => _iterator.current;

        init(iterator: Iterator[T]) is
            _iterator = iterator;
        si
        
        move_next() -> bool is
            while true do
                have_moved();

                if Â¬should_continue() then
                    break;
                fi

                if should_include() then
                    return true;
                fi
                
                _iterator.reset();

                return false;
            od                        
        si

        have_moved() is si

        should_continue() -> bool => true;
        
        should_include() -> bool => true;

        count() -> int is
            let count = 0;

            while move_next() do
                count = count + 1;
            od
        si
        
        reset() is
            _iterator.reset();
        si

        // FIXME: compiler provides an empty dispose method which prevents us overriding it here 
    si
si
